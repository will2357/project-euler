require './lib/euler/exercise/main'

class Euler::Exercise::Number00799 < Euler::Exercise::Main
  @@number = self.to_s[-5,5].to_i
  def initialize;super(@@number);end

=begin
Problem 799:


Pentagonal numbers are generated by the formula: P_n = \tfrac 12n(3n-1) giving the sequence:

1,5,12,22,35, 51,70,92,\ldots 

Some pentagonal numbers can be expressed as the sum of two other pentagonal numbers.
For example:

P_8 = 92 = 22 + 70 = P_4 + P_7

3577 is the smallest pentagonal number that can be expressed as the sum of two pentagonal numbers in two different ways


\begin{align}
P_{49} = 3577 & = 3432 + 145 = P_{48} + P_{10} \
 & = 3290 + 287 = P_{47}+P_{14}
\end{align}


107602 is the smallest pentagonal number that can be expressed as the sum of two pentagonal numbers in three different ways.


Find the smallest pentagonal number that can be expressed as the sum of two pentagonal numbers in over 100 different ways.



Source: https://projecteuler.net/problem=799
=end

  # Change '__FILL_ME_IN__' so that 'my_solution' returns the correct answer.
  def my_solution
    __FILL_ME_IN__
  end
end
