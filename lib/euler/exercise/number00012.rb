require './lib/euler/exercise/main'

class Euler::Exercise::Number00012 < Euler::Exercise::Main
  @@number = self.to_s[-5,5].to_i
  def initialize;super(@@number);end

=begin
Problem 12:

The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
Let us list the factors of the first seven triangle numbers:
\begin{align}
\mathbf 1 &\colon 1\
\mathbf 3 &\colon 1,3\
\mathbf 6 &\colon 1,2,3,6\
\mathbf{10} &\colon 1,2,5,10\
\mathbf{15} &\colon 1,3,5,15\
\mathbf{21} &\colon 1,3,7,21\
\mathbf{28} &\colon 1,2,4,7,14,28
\end{align}
We can see that 28 is the first triangle number to have over five divisors.
What is the value of the first triangle number to have over five hundred divisors?


Source: https://projecteuler.net/problem=12
=end

  # Change '__FILL_ME_IN__' so that 'my_solution' returns the correct answer.
  def my_solution
    __FILL_ME_IN__
  end
end
